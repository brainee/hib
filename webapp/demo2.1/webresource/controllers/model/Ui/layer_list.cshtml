@{
  ViewBag.Title = "Ui index";
}
<script type="text/lizard-config">
{
  url_schema: '/ui',
  viewName: 'ui_layer_list',
  models: {
    apis: [],
    filter: function(datas) {
      return {

      };
    }
  },
  view:{
    viewport: Lizard.T("viewportTmpl")
  },
  controller: '/webapp/demo2.1/webresource/controllers/ui/layer_list.js'
}
</script>

<script id="viewportTmpl" type="text/lizard-template">
  <style>
.popup-operate {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
}
.popup-operate ul {
  margin: 10px;
  overflow: hidden;
  border-radius: 6px;
}
.popup-operate ul li {
  height: 44px;
  margin: 1px 0;
  line-height: 44px;
  text-align: center;
  font-size: 20px;
  color: #157efb;
  background-color: #FFF;
}
  </style>
 <div class="cui-citys-bd">
 </div>
  <ul class="line-list">
    <li class="line-item js_demo01">基本用法-注意onHide时候释放资源</li>
  </ul>
  当前选择： <span class="listSec"></span>
  <pre><code>
define(['UIDemoView', 'UILayerList'], function (UIDemoView, UILayerList) {
  var View = UIDemoView.extend({
    events: {
      'click .js_demo01': 'demo01'
    },
    demo01: function () {
      var scope = this;
      if (!this.list) {
        var data = [];
        for (var i = 0; i < 4; i++) {
          data.push({ name: '更多操作' + i });
        }
        this.list = new UILayerList({
          datamodel: {
            list: data
          },
          onItemAction: function (item) {
            scope.$('.listSec').html(item.name);
            this.hide();
          }
        });
      }
      this.list.show();
    },
    onCreate: function () {
    },
    onShow: function () {
      this.header.set({
        view: this,
        title: '下面上来的弹出层列表',
        back: true
      });
      this.header.show()
    },
    onHide: function () {
      if (this.list) this.list.hide();
    }
  });
  return View;
});    
    </code></pre>
</script>