define(function(){return"﻿﻿\r\n<script type=\"text/lizard-config\">\r\n{\r\n  url_schema: '/ui/alert',\r\n  viewName: 'ui_alert',\r\n  models: {\r\n    apis: [],\r\n    filter: function(datas) {\r\n      return {\r\n\r\n      };\r\n    }\r\n  },\r\n  view:{\r\n    viewport: Lizard.T(\"viewportTmpl\")\r\n  },\r\n  controller: 'webresource/controllers/ui/alert.js'\r\n}\r\n</script>\r\n\r\n<script id=\"viewportTmpl\" type=\"text/lizard-template\">\r\n <div class=\"cui-citys-bd\">\r\n </div>\r\n<pre>\r\n<code>\r\n/*\r\n① 如果不是使用showMessage的话，在view离开时（onhide）时候需要做组件的销毁或者隐藏\r\n② 本身alert继承至layer类，所以具有以下特性\r\n//需要蒙版\r\nthis.needMask = true;\r\n//需要点击蒙版删除\r\nthis.maskToHide = true;\r\n//需要居中定位\r\nthis.needReposition = true;\r\n//是否具有后退关闭弹出层需求（***这个接口容易导致框架bug，一般不使用***）\r\nthis.hasPushState = false;;\r\n//类型为layer\r\nthis.type = 'layer';\r\n\r\n\r\n//是否具有动画\r\nthis.needAnimat = false;\r\n//具有动画情况，进入时候会执行的动画class\r\nthis.animateInClass = 'cm-up-in';\r\n//具有动画情况，离开时候会执行的动画class\r\nthis.animateOutClass = 'cm-up-out';\r\n\r\n//如果提供的class不满足条件，则自定义进入出去的class\r\nthis.animateShowAction = null;\r\nthis.animateHideAction = null;\r\n\r\n*/\r\n</code>\r\n</pre>\r\n  <ul class=\"line-list\">\r\n    <li class=\"line-item js_demo01\">框架基本用法</li>\r\n    <li class=\"line-item js_demo02\">框架基本用法-带title</li>\r\n    <li class=\"line-item js_demo03\">框架基本用法-重置回调</li>\r\n    <li class=\"line-item js_demo04\">框架基本用法-showConfirm</li>\r\n    <li class=\"line-item js_demo05\">框架基本用法-showConfirm-回调重置</li>\r\n  </ul>\r\n<pre>\r\n<code>\r\ndemo01: function () {\r\n  this.showMessage('框架基本使用');\r\n},\r\ndemo02: function () {\r\n  this.showMessage({\r\n    datamodel: {\r\n      title: '带标题',\r\n      content: '框架使用'\r\n    }\r\n  });\r\n},\r\ndemo03: function () {\r\n  this.showMessage({\r\n    datamodel: {\r\n      content: '框架使用1'\r\n    },\r\n    okAction: function () {\r\n      alert('重置回调');\r\n      this.hide();\r\n    }\r\n  });\r\n},\r\ndemo04: function () {\r\n  this.showConfirm({\r\n    datamodel: {\r\n      content: '框架使用'\r\n    },\r\n    okAction: function () {\r\n      alert('确定');\r\n      this.hide();\r\n    },\r\n    cancelAction: function () {\r\n      alert('取消');\r\n    }\r\n  });\r\n},\r\ndemo05: function () {\r\n  this.showConfirm({\r\n    datamodel: {\r\n      content: '框架使用',\r\n      btns: [\r\n        { name: '取消1', className: 'cui-btns-cancel' },\r\n        { name: '确定1', className: 'cui-btns-ok' }\r\n      ]\r\n    },\r\n    okAction: function () {\r\n      alert('重置');\r\n      this.hide();\r\n    }\r\n  });\r\n},\r\n</code>\r\n</pre>\r\n\r\n  <ul class=\"line-list\">\r\n    <li class=\"line-item js_demo06\">单独使用，需要释放接口</li>\r\n  </ul>\r\n\r\n  <pre>\r\n<code>\r\n/*\r\n如果框架未提供样式，这里便需要业务\r\n.cui-roller-btns .cui-flexbd:nth-of-type(3) {\r\n  border-left: 1px solid rgba(0, 0, 0, 0.3);\r\n}\r\n*/\r\n  demo06: function () {\r\n  if (!this.alert01) {\r\n    this.alert01 = new UIAlert({\r\n      datamodel: {\r\n        content: '单独使用时，注意onHide时候释放资源，按钮样式需要自己定制',\r\n        btns: [\r\n          { name: '知道了', className: 'cui-btns-ok' },\r\n          { name: '不知道', className: 'cui-btns-no' },\r\n          { name: '未知', className: 'cui-btns-unknown' }\r\n        ]\r\n      },\r\n      events: {\r\n        'click .cui-btns-ok': 'okAction',\r\n        'click .cui-btns-no': 'noAction',\r\n        'click .cui-btns-unknown': 'unknownAction'\r\n      },\r\n      okAction: function () {\r\n        alert('知道了');\r\n        this.hide();\r\n      },\r\n      noAction: function () {\r\n        alert('不知道');\r\n        this.hide();\r\n      },\r\n      unknownAction: function () {\r\n        alert('未知');\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n  this.alert01.show();\r\n},\r\nonHide: function () {\r\n  if (this.alert01)\r\n    this.alert01.hide();\r\n}\r\n</code>\r\n</pre>\r\n\r\n\r\n</script>"});