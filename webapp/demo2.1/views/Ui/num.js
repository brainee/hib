define(function(){return"﻿﻿\r\n<script type=\"text/lizard-config\">\r\n  {\r\n  url_schema: '/ui/num',\r\n  viewName: 'ui_num',\r\n  models: {\r\n  apis: [],\r\n  filter: function(datas) {\r\n  return {\r\n\r\n  };\r\n  }\r\n  },\r\n  view:{\r\n  viewport: Lizard.T(\"viewportTmpl\")\r\n  },\r\n  controller: 'webresource/controllers/ui/num.js'\r\n  }\r\n</script>\r\n\r\n<script id=\"viewportTmpl\" type=\"text/lizard-template\">\r\n  <div class=\"cui-citys-bd\">\r\n  </div>\r\n  <pre><code>\r\nif (!this.num01) {\r\n  this.num01 = new UINum({\r\n    //数据模型，会影响插件渲染\r\n    datamodel: {\r\n      min: 1,//最小值\r\n      max: 9,//最大值\r\n      curNum: 1,//当前值\r\n      unit: '个',//数字单位\r\n      needText: true//是否需要编辑文本\r\n    },\r\n    //UI组件包裹器，会放到什么容器里面\r\n    wrapper: this.$('.js_demo01'),\r\n    //数字改变时触发的事件\r\n    changed: function (num) {\r\n      console.log('num changed ' + num);\r\n    }\r\n  });\r\n} else {\r\n  //这里可以做重置工作\r\n}\r\nthis.num01.show();\r\n    \r\n    </code></pre>\r\n  <div class=\"js_demo01\"></div>\r\n\r\n<pre><code>\r\nvar scope = this;\r\nif (!this.num02) {\r\n  this.num02 = new UINum({\r\n    wrapper: this.$('.js_demo02'),\r\n    changed: function (num) {\r\n      console.log('num changed ' + num);\r\n    }\r\n  });\r\n} else {\r\n  //这里可以做重置工作\r\n}\r\nthis.num02.show();\r\n//联动操作\r\nif (!this.num03) {\r\n  this.num03 = new UINum({\r\n    wrapper: this.$('.js_demo02'),\r\n    changed: function (num) {\r\n      console.log('num changed ' + num);\r\n    },\r\n    availableFn: function () {\r\n      if (scope.num02.getVal() == 5) return true;\r\n      alert('需要上一个组件为5才可选');\r\n      return false;\r\n    },\r\n  });\r\n} else {\r\n  //这里可以做重置工作\r\n}\r\nthis.num03.show();\r\n  \r\n  </code></pre>\r\n  <div class=\"js_demo02\"></div>\r\n  <div class=\"js_demo03\"></div>\r\n  <br />\r\n  <br />\r\n  <br />\r\n\r\n</script>"});