define(function(){return"﻿﻿\r\n<script type=\"text/lizard-config\">\r\n{\r\n  url_schema: '/ui/select',\r\n  viewName: 'ui_select',\r\n  models: {\r\n    apis: [],\r\n    filter: function(datas) {\r\n      return {\r\n\r\n      };\r\n    }\r\n  },\r\n  view:{\r\n    viewport: Lizard.T(\"viewportTmpl\")\r\n  },\r\n  controller: 'webresource/controllers/ui/select.js'\r\n}\r\n</script>\r\n\r\n<script id=\"viewportTmpl\" type=\"text/lizard-template\">\r\n <div class=\"cui-citys-bd\">\r\n </div>\r\n<pre><code>\r\n//select组件用于模拟传统的select组件\r\ndemo01: function () {\r\n  var scope = this, curItem;\r\n  var demo01Sec = scope.$('.js_sec01');\r\n  if (!this.demo1) {\r\n    this.demo1 = new UISelect({\r\n      datamodel: {\r\n        data: [\r\n          { id: 1, name: '中国' }, { id: 2, name: '美国' }, { id: 3, name: '英国' },\r\n          { id: 4, name: '中国1' }, { id: 5, name: '美国2' }, { id: 6, name: '英国3' }\r\n        ]\r\n      },\r\n      displayNum: 5,\r\n      changed: function (item) {\r\n        demo01Sec.html(item.id + ': ' + item.name);\r\n      },\r\n      wrapper: this.$('.js_demo01')\r\n    });\r\n    this.demo1.show();\r\n    curItem = this.demo1.getSelected();\r\n    demo01Sec.html(curItem.id + ': ' + curItem.name);\r\n  }\r\n},\r\n</code></pre>\r\n  <div class=\"js_demo01\" style=\" width: 50%;  margin: 0 auto; \"></div>\r\n  <br />\r\n  <span class=\"btn-secondary full-width js_sec01\">.btn-secondary</span>\r\n\r\n\r\n\r\n <style>\r\n   .cm-birthday {\r\n     text-align: center;\r\n     background: white;\r\n   }\r\n   .cm-birthday-col {\r\n    background: white;\r\n   \r\n   } \r\n   \r\n   .cm-birthday h3 {\r\n     border-bottom: 1px solid #dbdbdb;\r\n     line-height: 44px;\r\n   }\r\n\r\n     .cm-birthday .cm-birthday-col {\r\n       float: left;\r\n       width: 30%;\r\n       text-align: center;\r\n       border-right: 1px solid #dbdbdb;\r\n       margin: 5px 0;\r\n       position: relative;\r\n     }\r\n\r\n       .cm-birthday .cm-birthday-col:nth-of-type(1) {\r\n         width: 40%;\r\n       }\r\n\r\n       .cm-birthday .cm-birthday-col:nth-last-of-type(1) {\r\n         border-right: none;\r\n       }\r\n\r\n\r\n       .cm-birthday .cm-birthday-col li {\r\n         line-height: 36px;\r\n         color: #ccc;\r\n       }\r\n\r\n         .cm-birthday .cm-birthday-col li.active {\r\n           color: #333;\r\n         }\r\n   .cm-scroll-select::before, .cm-scroll-select::after {\r\n    left: 3px;\r\n    right: 3px;\r\n   }\r\n\r\n </style>\r\n  <pre><code>\r\n/*\r\n此处根据select组件，生成生日选择组件，这个代码业务逻辑有点小复杂：\r\n① 需要处理月份变化后日期重新加载的问题\r\n② 并且需要处理闰年的情况\r\n上述两种情况都是年或者月changed的时候需要触发事件，实际的业务中会涉及到三级联动，其业务更加复杂\r\n业务复杂变相导致该组件不好用，并不是组件本身有多难\r\ndemo02: function () {\r\n  var i, len, item;\r\n  var scope = this, curItem;\r\n  var _now = new Date();\r\n  var _year = _now.getFullYear();\r\n  var _month = _now.getMonth();\r\n  var _day = _now.getDate();\r\n  var yearData = [];\r\n  var monthData = [];\r\n  var dayData = [];\r\n  len = _year - 1939;\r\n  for (i = 0; i < len; i++) {\r\n    item = {\r\n      id: 1940 + i,\r\n      name: (1940 + i)+'年'\r\n    };\r\n    yearData.push(item);\r\n  }\r\n  for (i = 0; i < 12; i++) {\r\n    item = {\r\n      id: 1 + i,\r\n      name: ((1 + i) < 10 ? ('0' + (1+i)) : (1+i)) + '月'\r\n    };\r\n    monthData.push(item);\r\n  }\r\n  for (i = 0; i < 31; i++) {\r\n    item = {\r\n      id: 1 + i,\r\n      name: ((1 + i) < 10 ? ('0' + (1 + i)) : (1 + i)) + '日'\r\n    };\r\n    dayData.push(item);\r\n  }\r\n  //由localstorage读取数据\r\n  var birObj = birth.get();\r\n  //当年或者月改变后，日期需要判断闰年，或者日期变化的行为\r\n  var _yearOrMonthChanged = function (yearItem, monthItem) {\r\n    //处理month的时候日应该有所变化\r\n    var dayFlag = { 1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31 };\r\n    //闰年处理，需要先获取年份\r\n    if (_.dateUtil.isLeapYear(yearItem.id)) {\r\n      dayFlag[2] = 29;\r\n    }\r\n    var changed = false;\r\n    //此处重置日期接口，并且需要重置“天”的dom结构\r\n    for (var i = 0; i < 31; i++) {\r\n      //设置该项不可选取\r\n      dayData[i].disabled = true;\r\n    }\r\n    for (i = 31; i > dayFlag[monthItem.id] && i > 0; i--) {\r\n      dayData[i - 1].disabled = false;\r\n      changed = true;\r\n    }\r\n    if (changed) {\r\n      scope.day.reload(dayData);\r\n    }\r\n  };\r\n  if (!this.year) {\r\n    this.year = new UISelect({\r\n      datamodel: {\r\n        data: yearData\r\n      },\r\n      displayNum: 5,\r\n      changed: function (item) {\r\n        //demo02Sec.html(item.id + ': ' + item.name);\r\n        _yearOrMonthChanged(item, scope.month.getSelected());\r\n        scope._setBirth();\r\n      },\r\n      wrapper: this.$('.js_year_wrapper')\r\n    });\r\n  }\r\n  if (!this.month) {\r\n    this.month = new UISelect({\r\n      datamodel: {\r\n        data: monthData\r\n      },\r\n      displayNum: 5,\r\n      changed: function (item) {\r\n        //demo02Sec.html(item.id + ': ' + item.name);\r\n        _yearOrMonthChanged(scope.year.getSelected(), item);\r\n        scope._setBirth();\r\n      },\r\n      wrapper: this.$('.js_month_wrapper')\r\n    });\r\n  }\r\n  if (!this.day) {\r\n    this.day = new UISelect({\r\n      datamodel: {\r\n        data: dayData\r\n      },\r\n      displayNum: 5,\r\n      changed: function (item) {\r\n        //demo02Sec.html(item.id + ': ' + item.name);\r\n        scope._setBirth();\r\n      },\r\n      wrapper: this.$('.js_day_wrapper')\r\n    });\r\n  }\r\n  //因为年月日有依赖关系，这里得注意\r\n  this.year.show();\r\n  this.month.show();\r\n  this.day.show();\r\n  //如果已经保存了日期对象，直接读出\r\n  if (birObj) {\r\n    this.year.setId(birObj.year);\r\n    this.month.setId(birObj.month);\r\n    this.day.setId(birObj.day);\r\n    _yearOrMonthChanged(scope.year.getSelected(), scope.month.getSelected());\r\n  }\r\n  this._setBirth();\r\n},\r\n_setBirth: function () {\r\n  var demo02Sec = this.$('.js_sec02');\r\n  var yearItem, monthItem, dayItem;\r\n  yearItem = this.year.getSelected();\r\n  monthItem = this.month.getSelected();\r\n  dayItem = this.day.getSelected();\r\n  birth.set({\r\n    year: yearItem.id,\r\n    month: monthItem.id,\r\n    day: dayItem.id\r\n  });\r\n  demo02Sec.html(yearItem.name + monthItem.name + dayItem.name);\r\n},\r\n*/\r\n\r\n\r\n</code></pre>\r\n\r\n  <div class=\"cm-birthday\">\r\n    <h3>请选择出生日期</h3>\r\n    <div class=\"cm-birthday-col js_year_wrapper\">\r\n    \r\n    </div>\r\n    <div class=\"cm-birthday-col js_month_wrapper\">\r\n    \r\n    </div>\r\n    <div class=\"cm-birthday-col js_day_wrapper\">\r\n    \r\n    </div>\r\n  </div>\r\n  <br />\r\n  <br />\r\n  <span class=\"btn-secondary full-width js_sec02\" style=\" margin-top: 20px; \">.btn-secondary</span>\r\n\r\n  <br />\r\n  <br />\r\n  <br />\r\n\r\n</script>"});