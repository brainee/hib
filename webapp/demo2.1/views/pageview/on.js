define(function(){return"﻿﻿\r\n\r\n\r\n<script type=\"text/lizard-config\">\r\n{\r\n  url_schema: '/pageview/on',\r\n  models: {\r\n    apis: [],\r\n    filter: function(datas) {\r\n      return {};\r\n    }\r\n  },\r\n\r\n  view:{\r\n    viewport: Lizard.T(\"viewportTmpl\")\r\n  },\r\n  viewName: 'on',\r\n  controller: 'webresource/controllers/pageview/on.js'\r\n}\r\n</script>\r\n\r\n<script id=\"viewportTmpl\" type=\"text/lizard-template\">\r\n<h2 class=\"guide-title\">用法</h2>\r\n<pre><code>\r\n/*\r\n * on(type, [selector], function(e){ ... })，添加事件处理程序到对象集合中得元素上\r\n * off(type, [selector], function(e){ ... })，移除通过on添加的事件.移除一个特定的事件处理程序,必须通过用on()添加的那个相同的函数。\r\n * trigger(event, [args])，trigger在对象集合的元素上触发指定的事件\r\n */\r\n    $('.js-on').on('click',function(){\r\n    $(this).css('background','#52bce8')\r\n    });\r\n    //解除.js-on的click事件后，点击.js-on按钮将不会变色\r\n    $('.js-off').on('click',function(){\r\n    $('.js-on').off('click');\r\n    });\r\n    //添加trigger函数后,.js-on按钮将会自动变色\r\n    $('.js-trigger').on('click',function(){\r\n    $('.js-on').trigger('click');\r\n    })\r\n</code></pre>\r\n<h2 class=\"guide-title\">实例展示</h2>\r\n<p></p>\r\n<span class=\"btn-primary js-once\">once事件</span>\r\n<span class=\"btn-primary js-on\">on事件</span>\r\n<span class=\"btn-primary js-off\">off事件</span>\r\n<span class=\"btn-primary js-trigger\">trigger事件</span>\r\n</script>\r\n"});